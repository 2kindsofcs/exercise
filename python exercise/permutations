# https://leetcode.com/problems/permutations/

class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        result = []
        totalNum = len(nums)
        if totalNum == 1: 
            result.append(nums)
            return result
        if totalNum == 2:
            n1, n2 = nums[0], nums[1]
            result.append([n1, n2])
            result.append([n2, n1])
        else:
            for i in range(totalNum):
                startingNum = nums[i]
                tempList = self.permute([num for num in nums if num != startingNum])
                result.extend([[startingNum] + numGroup for numGroup in tempList])
        return result
